{"ast":null,"code":"var _jsxFileName = \"/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    if (logoutTimer) clearTimeout(logoutTimer);\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('experationTime', experationTime);\n    const remainingTime = experationTimeHelper(expirationTime);\n    console.log(remainingTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  }; //login helper\n\n\n  const experationTimeHelper = expirationTime => {\n    const currentTime = new Date().getTime();\n    const tokenExpiration = new Date(expirationTime).getTime();\n    const remainingSessionTime = tokenExpiration - currentTime;\n    return remainingSessionTime;\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/store/auth-context.js"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","clearTimeout","loginHandler","expirationTime","setItem","experationTime","remainingTime","experationTimeHelper","console","log","setTimeout","currentTime","Date","getTime","tokenExpiration","remainingSessionTime","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHgB;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBb,QAAQ,CAACU,YAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAACV,KAAzB;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AAEA,QAAGf,WAAH,EAAgBgB,YAAY,CAAChB,WAAD,CAAZ;AACnB,GALD;;AAOA,QAAMiB,YAAY,GAAG,CAACd,KAAD,EAAQe,cAAR,KAA2B;AAC5CN,IAAAA,QAAQ,CAACT,KAAD,CAAR;AACAO,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BhB,KAA9B;AACAO,IAAAA,YAAY,CAACS,OAAb,CAAqB,gBAArB,EAAuCC,cAAvC;AAEA,UAAMC,aAAa,GAAGC,oBAAoB,CAACJ,cAAD,CAA1C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACArB,IAAAA,WAAW,GAAGyB,UAAU,CAACX,aAAD,EAAgBO,aAAhB,CAAxB;AACH,GARD,CAb0C,CAsB1C;;;AACA,QAAMC,oBAAoB,GAAIJ,cAAD,IAAoB;AAC7C,UAAMQ,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,UAAMC,eAAe,GAAG,IAAIF,IAAJ,CAAST,cAAT,EAAyBU,OAAzB,EAAxB;AAEA,UAAME,oBAAoB,GAAGD,eAAe,GAAGH,WAA/C;AACA,WAAOI,oBAAP;AACH,GAND;;AAQA,QAAMC,YAAY,GAAG;AACjB5B,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAACS,cAFM;AAGjBR,IAAAA,KAAK,EAAEY,YAHU;AAIjBX,IAAAA,MAAM,EAAEQ;AAJS,GAArB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEiB,YAA7B;AAAA,cAA4CvB,KAAK,CAACwB;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAvCM;;GAAMzB,mB;;KAAAA,mB;AAyCb,eAAeN,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n    token: '', \n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {}\n});\n\nexport const AuthContextProvider = (props) => {\n    const initialToken = localStorage.getItem('token')\n    const [token, setToken] = useState(initialToken)\n\n    const userIsLoggedIn = !!token;\n    \n    const logoutHandler = () => {\n        setToken(null)\n        localStorage.removeItem('token')\n\n        if(logoutTimer) clearTimeout(logoutTimer)\n    }\n\n    const loginHandler = (token, expirationTime) => {\n        setToken(token)\n        localStorage.setItem('token', token)\n        localStorage.setItem('experationTime', experationTime)\n\n        const remainingTime = experationTimeHelper(expirationTime)\n        console.log(remainingTime)\n        logoutTimer = setTimeout(logoutHandler, remainingTime)\n    }\n    //login helper\n    const experationTimeHelper = (expirationTime) => {\n        const currentTime = new Date().getTime();\n        const tokenExpiration = new Date(expirationTime).getTime();\n\n        const remainingSessionTime = tokenExpiration - currentTime;\n        return remainingSessionTime;\n    }\n\n    const contextValue = {\n        token: token,\n        isLoggedIn:userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}