{"ast":null,"code":"var _jsxFileName = \"/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport axios from 'axios';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const SIGN_UP_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n  const API_KEY = \"AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\";\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (isLogin) {// ...\n    } else {\n      //   axios.post(SIGN_UP_URL + API_KEY,\n      //   { \n      //     \"email\": enteredPassword,\n      //     \"password\": enteredEmail,\n      //     \"returnSecureToken\": true\n      //   }, options\n      //   ).then(res => {\n      //     // if(res.ok){\n      //       console.log(res.data)\n      //     // }else{\n      //     //   return res.json().then((data) => {\n      //     //     console.log(data)\n      //     //   })\n      //     // }\n      //     return res\n      //   }).catch(err => {\n      //     console.error(err.json().data)\n      //   })\n      // }\n      console.log(enteredEmail);\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredPassword,\n          password: enteredEmail,\n          returnSecureToken: true\n        }),\n        options\n      }).then(res => {\n        if (res.ok) {// console.log(res.data)\n        } else {\n          return res.json().then(data => {\n            console.log(data.error);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","axios","classes","AuthForm","emailInputRef","passwordInputRef","SIGN_UP_URL","API_KEY","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","options","headers","console","log","fetch","method","body","JSON","stringify","email","password","returnSecureToken","then","res","ok","json","data","error","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport axios from 'axios'\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n  const SIGN_UP_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\"\n  const API_KEY = \"AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\"\n\n\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const options = {\n      headers: \n      {\"Content-Type\":\"application/json\"}\n    }\n    if(isLogin){\n      // ...\n    }else{\n    //   axios.post(SIGN_UP_URL + API_KEY,\n    //   { \n    //     \"email\": enteredPassword,\n    //     \"password\": enteredEmail,\n    //     \"returnSecureToken\": true\n    //   }, options\n    //   ).then(res => {\n    //     // if(res.ok){\n    //       console.log(res.data)\n    //     // }else{\n    //     //   return res.json().then((data) => {\n    //     //     console.log(data)\n    //     //   })\n    //     // }\n    //     return res\n    //   }).catch(err => {\n    //     console.error(err.json().data)\n    //   })\n    // }\n\n    console.log(enteredEmail)\n  fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\",\n      {\n        method:\"POST\",\n        body: JSON.stringify({ \n        email: enteredPassword,\n        password: enteredEmail,\n        returnSecureToken: true\n      }), options,\n    }).then(res => {\n      if(res.ok){\n        // console.log(res.data)\n      }else{\n        return res.json().then((data) => {\n          console.log(data.error)\n        })\n      }\n    })\n  }\n  \n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}