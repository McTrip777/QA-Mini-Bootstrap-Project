{"ast":null,"code":"var _jsxFileName = \"/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport axios from 'axios';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const SIGN_UP_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n  const SIGN_IN_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\n  const API_KEY = \"AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\";\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = SIGN_IN_URL + API_KEY;\n    } else {\n      url = SIGN_UP_URL + API_KEY;\n    }\n\n    axios.post(url, {\n      \"email\": enteredEmail,\n      \"password\": enteredPassword,\n      \"returnSecureToken\": true\n    }, options).then(res => {\n      setIsLoading(false);\n      alert(`Status: ${res.status} - User Created`);\n      return res;\n    }).catch(err => {\n      setIsLoading(false);\n      alert(err.response.data.error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"RqwvK/AX/XkSKVStQBnmgxX0L/M=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","axios","classes","AuthForm","emailInputRef","passwordInputRef","SIGN_UP_URL","SIGN_IN_URL","API_KEY","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","options","headers","url","post","then","res","alert","status","catch","err","response","data","error","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport axios from 'axios'\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n  const SIGN_UP_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\"\n  const SIGN_IN_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\"\n  const API_KEY = \"AIzaSyC77zuPw5Jy2WqrcfXfoYVXexbr02j2go4\"\n\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const options = {\n      headers: \n      {\"Content-Type\":\"application/json\"}\n    }\n\n    setIsLoading(true)\n    let url;\n    if(isLogin){\n      url = SIGN_IN_URL + API_KEY\n      \n    }else{\n      url = SIGN_UP_URL + API_KEY\n    }\n    axios.post(url,\n      { \n        \"email\": enteredEmail,\n        \"password\": enteredPassword,\n        \"returnSecureToken\": true\n      }, options\n      ).then(res => {\n        setIsLoading(false)\n        alert(`Status: ${res.status} - User Created`)\n        return res\n      }).catch(err => {\n        setIsLoading(false)\n        alert(err.response.data.error.message)\n      })\n  }\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}