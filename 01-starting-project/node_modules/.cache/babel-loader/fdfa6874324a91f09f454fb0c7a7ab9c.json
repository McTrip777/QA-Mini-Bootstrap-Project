{"ast":null,"code":"var _jsxFileName = \"/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst expirationTimeHelper = expirationTime => {\n  const currentTime = new Date().getTime();\n  const tokenExpiration = new Date(expirationTime).getTime();\n  const remainingSessionTime = currentTime - tokenExpiration;\n  return remainingSessionTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpiration = localStorage.getItem('expirationTime');\n  const remainingTime = expirationTimeHelper(storedExpiration);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    remainingTime: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData.token && tokenData.remainingTime) initialToken = tokenData.token;\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    if (logoutTimer) clearTimeout(logoutTimer);\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    console.log(token);\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    console.log(localStorage.getItem(token));\n    const remainingTime = expirationTimeHelper(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.remainingTime);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/jacobmcfaul/Documents/QA-Mini-Bootstrap-Project/01-starting-project/src/store/auth-context.js"],"names":["React","useState","useEffect","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","expirationTimeHelper","expirationTime","currentTime","Date","getTime","tokenExpiration","remainingSessionTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpiration","remainingTime","removeItem","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","console","log","setItem","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n    token: '', \n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {}\n});\n\nconst expirationTimeHelper = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const tokenExpiration = new Date(expirationTime).getTime();\n    const remainingSessionTime = currentTime - tokenExpiration;\n    return remainingSessionTime;\n}\n\nconst retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token')\n    const storedExpiration = localStorage.getItem('expirationTime')\n\n    const remainingTime = expirationTimeHelper(storedExpiration)\n    if(remainingTime <= 60000){\n        localStorage.removeItem('token')\n        localStorage.removeItem('expirationTime')\n        return null\n    }\n\n    return {\n        token: storedToken,\n        remainingTime: remainingTime\n    }\n}\n\nexport const AuthContextProvider = (props) => {\n    const tokenData = retrieveStoredToken();\n    \n    let initialToken\n    if(tokenData.token && tokenData.remainingTime) initialToken = tokenData.token\n\n    const [token, setToken] = useState(initialToken)\n\n    const userIsLoggedIn = !!token;\n    \n    const logoutHandler = () => {\n        setToken(null)\n        localStorage.removeItem('token')\n\n        if(logoutTimer) clearTimeout(logoutTimer)\n    }\n\n    const loginHandler = (token, expirationTime) => {\n        console.log(token)\n        setToken(token)\n        localStorage.setItem('token', token)\n        localStorage.setItem('expirationTime', expirationTime)\n        console.log(localStorage.getItem(token))\n        const remainingTime = expirationTimeHelper(expirationTime)\n        logoutTimer = setTimeout(logoutHandler, remainingTime)\n    }\n\n    useEffect(() => {\n        if(tokenData){ \n            logoutTimer = setTimeout(logoutHandler, tokenData.remainingTime)\n        }\n    }, [tokenData])\n\n    const contextValue = {\n        token: token,\n        isLoggedIn:userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}